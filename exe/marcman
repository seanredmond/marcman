#!/usr/bin/env ruby

require "launchy"
require "marcman"


options = {:browser => false,
           :indicators => false,
           :repeat=>false,
           :subfields => false}

# show help if there is no field argument
ARGV << '-h' if ARGV.empty?

OptionParser.new do |opts|
  opts.banner = "Usage: marcman [CODE] [options]"

  opts.on("-i", "--[no-]indicators", "Show indicator definitions") do |i|
    options[:indicators] = i
  end

  opts.on("-s", "--[no-]subfields", "Show subfield definitions") do |s|
    options[:subfields] = s
  end

  opts.on("-r", "--[no-]repeatable",
          "Show repeatability of fields and subfields") do |r|
    options[:repeat] = r
  end

  opts.on("-b", "--[no-]browse", "Open in browser") do |b|
    options[:browser] = b
  end

  opts.on_tail("--version", "Show version") do
    puts Marcman::VERSION
    exit
  end

end.parse!

begin
  code, field = Marcman::getFieldFromCode(ARGV.first)

  puts "%s: %s%s" % [code, field[:definition], Marcman::formatRepeat(field[:repeat], options[:repeat])]
  if options[:indicators] and field[:indicators]
    (1..2).each do |i|
      puts Marcman::formatIndicators(code, i).join("\n")
    end
  end
  
  if options[:subfields] and field[:subfields]
    puts "  Subfields:"
    puts Marcman::formatSubfields(code, options[:repeat]).join("\n")
  end
  
  if options[:browser]
    if field[:docurl].nil?
      Launchy.open(
        "https://www.loc.gov/marc/bibliographic/bd%s.html" % code.downcase
      )
    else
      Launchy.open(field[:docurl])
    end
  end
rescue Marcman::BadMarcFieldFormatError => e
  puts e
  exit 1
rescue Marcman::NoMarcFieldError => e
  puts e
end
